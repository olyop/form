{"version":3,"sources":["serviceWorker.js","App/globals.js","App/common/AxiosError/index.js","App/common/Form/globals.js","App/common/Form/helpers.js","App/common/Form/Fields/Field/HelperText/index.js","App/common/Form/Fields/Field/Label/index.js","App/common/Form/Fields/Field/types/MobileNumber/index.js","App/common/Form/Fields/Field/types/BooleanType/index.js","App/common/Form/Fields/Field/types/Selection/index.js","App/common/Form/Fields/Field/Errors/index.js","App/common/Form/Fields/Field/types/TextType/index.js","App/common/Form/Fields/Field/types/DateType/index.js","App/common/Form/Fields/Field/index.js","App/common/Form/Fields/index.js","App/common/Form/Submit/index.js","App/common/Form/index.js","App/Employees/index.js","App/index.js","index.js"],"names":["isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","apiUrlPeople","apiUrl","addEmployeesFormFields","name","camelCase","type","required","def","selections","booleanText","AxiosErrorPre","props","react_default","a","createElement","className","JSON","stringify","obj","AxiosError","err","response","data","map","item","index","key","upperFirst","AxiosError_AxiosErrorPre","maliciousStrings","defField","helperText","placeholder","maxLength","min","max","validation","months","years","Object","toConsumableArray","Array","year","moment","daysInMonthArr","month","concat","daysInMonth","getDaysInMonth","v","i","mapAndInitState","fields","reduce","field","isNull","day","countryCode","phoneNumber","mapStateWithValue","val","newState","fieldsErr","status","code","text","checkStrInArr","arr","str","acc","subString","includes","defValidation","errors","isString","push","length","isNumber","inRange","isObject","selectionCodes","option","startsWith","isBoolean","objectSpread","errState","x","_len","arguments","fns","_key","f","addStateValue","reduceToErrState","checkIfErrors","HelperText","_ref","FormHelperText_default","labelRequiredStr","label","Label","InputLabel_default","shirnk","children","defaultProps","MobileNumber","handleChange","Field_Label","Input_default","autoComplete","value","onChange","style","width","marginRight","inputProps","Field_HelperText","BooleanType","Switch_default","checked","Selection","Select_default","input","selection","MenuItem_default","shortid","generate","Errors","idx","color","TextType","fullWidth","Field_Errors","DateType","autoWidth","Field","types_TextType","types_DateType","types_MobileNumber","types_Selection","types_BooleanType","Fields","Form_Fields_Field","assign","Submit","handleSubmit","Button_default","onClick","variant","Form","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","event","_event$target","target","setState","prevState","defineProperty","toNumber","res","handleStatus","statusText","setTimeout","bind","assertThisInitialized","Form_Fields","Form_Submit","React","Component","SerializeForm","Form_Form","Employees","addEmployee","callback","axios","post","url","employees","_this2","get","isError","App_common_AxiosError","isArray","App_common_Form","heading","App","id","src_App_Employees","ReactDOM","render","src_App_0","document","getElementById","URL","process","href","origin","addEventListener","fetch","contentType","headers","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.cdf7ff60.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","export const apiUrl = 'http://192.168.1.3:3001/api'\r\nexport const apiUrlPeople = apiUrl + '/people'\r\n\r\nexport const addEmployeesFormFields = [\r\n  {\r\n    name: 'First Name',\r\n    camelCase: 'firstName',\r\n    type: 'text',\r\n    required: true,\r\n    def: 'Oliver'\r\n  },\r\n  {\r\n    name: 'Family Name',\r\n    camelCase: 'familyName',\r\n    type: 'text',\r\n    required: true,\r\n    def: 'Plummer'\r\n  },\r\n  {\r\n    name: 'Gender',\r\n    camelCase: 'gender',\r\n    type: 'selection',\r\n    required: true,\r\n    selections: [\r\n      { name: 'Male', camelCase: 'male' },\r\n      { name: 'Female', camelCase: 'female' },\r\n      { name: 'Other', camelCase: 'other' }\r\n    ]\r\n  },\r\n  {\r\n    name: 'Date of Birth',\r\n    camelCase: 'dob',\r\n    type: 'date',\r\n    required: true\r\n  },\r\n  {\r\n    name: 'Phone Number',\r\n    camelCase: 'mobileNumber',\r\n    type: 'mobileNumber',\r\n    required: true\r\n  },\r\n  {\r\n    name: 'Email',\r\n    camelCase: 'email',\r\n    type: 'email',\r\n    required: true,\r\n    def: 'oliver.plummer@outlook.com'\r\n  },\r\n  {\r\n    name: 'State/Territory',\r\n    camelCase: 'state',\r\n    type: 'selection',\r\n    required: true,\r\n    def: 2,\r\n    selections: [\r\n      { name: 'Australian Capital Territory', camelCase: 'act' },\r\n      { name: 'Jervis Bay Territory', camelCase: 'jby' },\r\n      { name: 'New South Wales', camelCase: 'nsw' },\r\n      { name: 'Northern Territory', camelCase: 'nt' },\r\n      { name: 'Queensland', camelCase: 'qld' },\r\n      { name: 'South Australia', camelCase: 'sa' },\r\n      { name: 'Tasmania', camelCase: 'tas' },\r\n      { name: 'Victoria', camelCase: 'vic' },\r\n      { name: 'Western Australia', camelCase: 'wa' },\r\n    ]\r\n  },\r\n  {\r\n    name: 'Would you like to recieve emails from us?',\r\n    camelCase: 'emailUpdates',\r\n    type: 'boolean',\r\n    required: true,\r\n    booleanText: 'Yes/No',\r\n    def: false\r\n  }\r\n]\r\n","import React from 'react'\r\n\r\nimport { upperFirst } from 'lodash'\r\n\r\nimport './index.css'\r\n\r\nconst AxiosErrorPre = props => (\r\n  <pre className=\"AxiosError__pre\">\r\n    {JSON.stringify(props.obj, null, 2)}\r\n  </pre>\r\n)\r\n\r\nconst AxiosError = props => {\r\n  if (props.err.response) {\r\n    console.error(props.err.response.data)\r\n  }\r\n  return (\r\n    <div className=\"AxiosError\">\r\n      <h1 className=\"AxiosError__h1\">Axios Error </h1>\r\n      <ul>\r\n        {['config', 'response'].map((item, index) => (\r\n          <li key={index}>\r\n            <h2 className=\"AxiosError__h2\">{upperFirst(item)}:</h2>\r\n            <AxiosErrorPre obj={props.err[item] || {}} />\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default AxiosError\r\n","import moment from 'moment'\r\n\r\nexport const maliciousStrings = ['<', '>', 'script']\r\n\r\nexport const fieldTypes = ['text', 'number', 'email', 'date', 'mobileNumber', 'selection', 'boolean']\r\n\r\nexport const defField = {\r\n  required: false,\r\n  helperText: '',\r\n  selections: [],\r\n  def: null,\r\n  placeholder: '',\r\n  maxLength: 256,\r\n  min: -256,\r\n  max: 256,\r\n  validation: []\r\n}\r\n\r\nexport const months = [\r\n  'January',\r\n  'February',\r\n  'March',\r\n  'April',\r\n  'May',\r\n  'June',\r\n  'July',\r\n  'August',\r\n  'September',\r\n  'October',\r\n  'Novemeber',\r\n  'December'\r\n]\r\n\r\nexport const years = [...Array(60)].map((year, index) => moment().year() - index)\r\n","import moment from 'moment'\r\nimport shortid from 'shortid'\r\n\r\nimport { isString, isNumber, isObject, isBoolean, inRange, isNull, startsWith } from 'lodash'\r\nimport { maliciousStrings, defField } from './globals'\r\n\r\nexport const pipe = x => (...fns) => fns.reduce((v, f) => f(v), x)\r\n\r\nconst getDaysInMonth = (month, year) => moment(`${year}-${month + 1}`, 'YYYY-MM').daysInMonth()\r\n\r\nexport const daysInMonthArr = (month, year) => [...Array(getDaysInMonth(month, year))].map((v, i) => i + 1)\r\n\r\nexport const serializeFields = fields => fields.map(\r\n  field => ({\r\n    ...defField,\r\n    ...field,\r\n    key: shortid.generate()\r\n  })\r\n)\r\n\r\nconst mapAndInitState = fields => fields.reduce(\r\n  (state, field) => {\r\n    const { type, def, camelCase, selections } = field\r\n    if (type === 'text' || type === 'email') {\r\n      state[camelCase] = isNull(def) ? '' : def\r\n    } else if (type === 'number') {\r\n      state[camelCase] = isNull(def) ? 0 : def\r\n    } else if (type === 'date') {\r\n      state[camelCase] = isNull(def) ? { year: 2000, month: 0, day: 1 } : def\r\n    } else if (type === 'selection') {\r\n      state[camelCase] = isNull(def) ? selections[0].camelCase : selections[def].camelCase\r\n    } else if (type === 'mobileNumber') {\r\n      state[camelCase] = isNull(def) ? { countryCode: '+61', phoneNumber: '0431694866' } : def\r\n    } else if (type === 'boolean') {\r\n      state[camelCase] = isNull(def) ? true : def\r\n    }\r\n    return state\r\n  },\r\n  {}\r\n)\r\n\r\nconst mapStateWithValue = (fields, val) => fields.reduce(\r\n  (state, field) => {\r\n    state[field.camelCase] = val\r\n    return state\r\n  },\r\n  {}\r\n)\r\n\r\nexport const newState = fields => ({\r\n  fields: mapAndInitState(fields),\r\n  fieldsErr: mapStateWithValue(fields, []),\r\n  status: { code: null, text: '' }\r\n})\r\n\r\nexport const addStateValue = state => fields => fields.map(\r\n  field => ({\r\n    ...field,\r\n    val: state[field.camelCase]\r\n  })\r\n)\r\n\r\nconst checkStrInArr = (arr, str) => arr.reduce(\r\n  (acc, subString) => {\r\n    if (str.includes(subString)) { acc = true }\r\n    return acc\r\n  },\r\n  false\r\n)\r\n\r\nconst defValidation = fields => fields.map(field => {\r\n\r\n  const { val, type, required, maxLength, min, max, selections } = field\r\n  const errors = []\r\n\r\n  if (type === 'text') {\r\n    if (isString(val)) {\r\n      if (required && val === '') {\r\n        errors.push('Field is required.')\r\n      } else {\r\n        if (checkStrInArr(maliciousStrings, val)) {\r\n          errors.push('Potentially malicious input.')\r\n        } else {\r\n          if (val.length > maxLength) { errors.push('Input too long.') }\r\n        }\r\n      }\r\n    } else {\r\n      errors.push('Invalid data type.')\r\n    }\r\n  }\r\n\r\n  if (type === 'number') {\r\n    if (isNumber(val)) {\r\n      if (inRange(val, min, max) === false) { errors.push('Number is out of range.') }\r\n    }\r\n    else { errors.push('Invalid data type.') }\r\n  }\r\n\r\n  if (type === 'date') {\r\n    if (isObject(val)) {\r\n      if (isNumber(val.year) === false || isNumber(val.month) === false || isNumber(val.day) === false) {\r\n        errors.push('Invalid data type.')\r\n      }\r\n    }\r\n    else { errors.push('Invalid data type.') }\r\n  }\r\n\r\n  if (type === 'selection') {\r\n    if (isString(val)) {\r\n      if (checkStrInArr(maliciousStrings, val)) {\r\n        errors.push('Potentially malicious input.')\r\n      } else {\r\n        const selectionCodes = selections.map(option => option.camelCase)\r\n        if (checkStrInArr(selectionCodes, val) === false) {\r\n          errors.push('Value not in selection list.')\r\n        }\r\n      }\r\n    }\r\n    else { errors.push('Invalid data type.') }\r\n  }\r\n\r\n  if (type === 'mobileNumber') {\r\n    if (isObject(val)) {\r\n      if (isString(val.countryCode) && isString(val.phoneNumber)) {\r\n        if (startsWith(val.countryCode, '+') === false) {\r\n          errors.push('Country code must start with a \\'+\\'.')\r\n        }\r\n      }\r\n      else { errors.push('Invalid data type.') }\r\n    }\r\n    else { errors.push('Invalid data type.') }\r\n  }\r\n\r\n  if (type === 'boolean') {\r\n    if (isBoolean(val) === false) { errors.push('Invalid data type.') }\r\n  }\r\n\r\n  return ({ ...field, errors })\r\n})\r\n\r\nexport const errState = (props, state) => (\r\n  pipe(props)(\r\n    addStateValue(state),\r\n    defValidation\r\n  )\r\n)\r\n\r\nexport const reduceToErrState = fields => fields.reduce(\r\n  (state, field) => {\r\n    state[field.camelCase] = field.errors\r\n    return state\r\n  },\r\n  {}\r\n)\r\n\r\nexport const checkIfErrors = state => state.reduce(\r\n  (acc, field) => {\r\n    if (field.errors.length !== 0) { acc = true }\r\n    return acc\r\n  },\r\n  false\r\n)\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nimport FormHelperText from '@material-ui/core/FormHelperText'\r\n\r\nconst HelperText = ({ text }) => {\r\n  if (text === '') {\r\n    return null\r\n  } else {\r\n    return <FormHelperText>{text}</FormHelperText>\r\n  }\r\n}\r\n\r\nHelperText.propTypes = {\r\n  text: PropTypes.string.isRequired\r\n}\r\n\r\nexport default HelperText\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nimport InputLabel from '@material-ui/core/InputLabel'\r\n\r\nconst labelRequiredStr = (label, required) => label + (required ? ' *' : '')\r\n\r\nconst Label = ({ name, required }) => (\r\n  <InputLabel\r\n    shirnk=\"true\"\r\n    children={labelRequiredStr(name, required)}\r\n  />\r\n)\r\n\r\nLabel.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  required: PropTypes.bool\r\n}\r\n\r\nLabel.defaultProps = {\r\n  required: false\r\n}\r\n\r\nexport default Label\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nimport Input from '@material-ui/core/Input'\r\nimport HelperText from '../../HelperText'\r\nimport Label from '../../Label'\r\n\r\nconst MobileNumber = ({val,handleChange,name,camelCase,type,placeholder,required,helperText}) => (\r\n  <div className=\"Field\">\r\n    <Label\r\n      name={name}\r\n      required={required}\r\n    />\r\n    <div className=\"Field__row\">\r\n      <Input\r\n        type=\"tel\"\r\n        autoComplete=\"tel\"\r\n        name=\"countryCode\"\r\n        value={val.countryCode}\r\n        onChange={handleChange(type, camelCase)}\r\n        style={{ width: 30, marginRight: 5 }}\r\n        inputProps={{ maxLength: 3 }}\r\n      />\r\n      <Input\r\n        type=\"tel\"\r\n        autoComplete=\"tel\"\r\n        name=\"phoneNumber\"\r\n        value={val.phoneNumber}\r\n        onChange={handleChange(type, camelCase)}\r\n        style={{ width: 90 }}\r\n        inputProps={{ maxLength: 10 }}\r\n        placeholder={placeholder}\r\n      />\r\n    </div>\r\n    <HelperText\r\n      text={helperText}\r\n    />\r\n  </div>\r\n)\r\n\r\nMobileNumber.propTypes = {\r\n  val: PropTypes.object.isRequired\r\n}\r\n\r\nexport default MobileNumber\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nimport Switch from '@material-ui/core/Switch'\r\nimport HelperText from '../../HelperText'\r\nimport Label from '../../Label'\r\n\r\nconst BooleanType = ({val,handleChange,name,camelCase,type,helperText,booleanText}) => (\r\n  <div className=\"Field\">\r\n    <Label\r\n      name={name}\r\n    />\r\n    <div className=\"Field__row\">\r\n      <p className=\"Field__row-p\">{booleanText}</p>\r\n      <Switch\r\n        onChange={handleChange(type, camelCase)}\r\n        checked={val}\r\n      />\r\n    </div>\r\n    <HelperText\r\n      text={helperText}\r\n    />\r\n  </div>\r\n)\r\n\r\nBooleanType.propTypes = {\r\n  val: PropTypes.bool.isRequired,\r\n  booleanText: PropTypes.string.isRequired\r\n}\r\n\r\nexport default BooleanType\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nimport MenuItem from '@material-ui/core/MenuItem'\r\nimport Select from '@material-ui/core/Select'\r\nimport Input from '@material-ui/core/Input'\r\nimport HelperText from '../../HelperText'\r\nimport Label from '../../Label'\r\n\r\nimport shortid from 'shortid'\r\n\r\nconst Selection = ({val,handleChange,name,camelCase,type,helperText,required,selections}) => (\r\n  <div className=\"Field\">\r\n    <Label\r\n      name={name}\r\n      required={required}\r\n    />\r\n    <Select\r\n      value={val}\r\n      onChange={handleChange(type, camelCase)}\r\n      input={<Input />}\r\n      style={{ marginRight: 8 }}\r\n    >\r\n      {selections.map(selection => (\r\n        <MenuItem\r\n          key={shortid.generate()}\r\n          value={selection.camelCase}\r\n          children={selection.name}\r\n        />\r\n      ))}\r\n    </Select>\r\n    <HelperText\r\n      text={helperText}\r\n    />\r\n  </div>\r\n)\r\n\r\nSelection.propTypes = {\r\n  val: PropTypes.string.isRequired\r\n}\r\n\r\nexport default Selection\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nimport FormHelperText from '@material-ui/core/FormHelperText'\r\n\r\nconst Errors = ({ errors }) => {\r\n  if (errors.length === 0) {\r\n    return null\r\n  } else {\r\n    return (\r\n      <div>\r\n        {errors.map((err, idx) => (\r\n          <FormHelperText\r\n            key={idx}\r\n            style={{ color: '#F44336' }}\r\n            children={err}\r\n          />\r\n        ))}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nErrors.propTypes = {\r\n  errors: PropTypes.array.isRequired\r\n}\r\n\r\nexport default Errors\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nimport Input from '@material-ui/core/Input'\r\nimport HelperText from '../../HelperText'\r\nimport Errors from '../../Errors'\r\nimport Label from '../../Label'\r\n\r\nconst TextType = ({val,errors,handleChange,name,camelCase,type,placeholder,helperText,required,maxLength}) => (\r\n  <div className=\"Field\">\r\n    <Label\r\n      name={name}\r\n      required={required}\r\n    />\r\n    <Input\r\n      type={type}\r\n      value={val}\r\n      onChange={handleChange(type, camelCase)}\r\n      placeholder={placeholder}\r\n      inputProps={{ maxLength }}\r\n      fullWidth\r\n    />\r\n    <HelperText\r\n      text={helperText}\r\n    />\r\n    <Errors\r\n      errors={errors}\r\n    />\r\n  </div>\r\n)\r\n\r\nTextType.propTypes = {\r\n  val: PropTypes.oneOfType([ PropTypes.string, PropTypes.number]).isRequired\r\n}\r\n\r\nexport default TextType\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nimport shortid from 'shortid'\r\n\r\nimport MenuItem from '@material-ui/core/MenuItem'\r\nimport Select from '@material-ui/core/Select'\r\nimport Input from '@material-ui/core/Input'\r\nimport HelperText from '../../HelperText'\r\nimport Label from '../../Label'\r\n\r\nimport { daysInMonthArr } from '../../../../helpers'\r\nimport { months, years } from '../../../../globals'\r\n\r\nconst DateType = ({val,handleChange,name,camelCase,type,required,helperText}) => (\r\n  <div className=\"Field\">\r\n    <Label\r\n      name={name}\r\n      required={required}\r\n    />\r\n    <div className=\"Field__row\">\r\n      <Select\r\n        name=\"year\"\r\n        value={val.year}\r\n        onChange={handleChange(type, camelCase)}\r\n        input={<Input />}\r\n        style={{ marginRight: 8 }}\r\n        autoWidth\r\n        children={years.map(year => (\r\n          <MenuItem\r\n            key={shortid.generate()}\r\n            value={year}\r\n            children={year}\r\n          />\r\n        ))}\r\n      />\r\n      <Select\r\n        name=\"month\"\r\n        value={val.month}\r\n        onChange={handleChange(type, camelCase)}\r\n        input={<Input />}\r\n        style={{ marginRight: 8 }}\r\n        children={months.map((month, index) => (\r\n          <MenuItem\r\n            key={shortid.generate()}\r\n            value={index}\r\n            children={month}\r\n          />\r\n        ))}\r\n      />\r\n      <Select\r\n        name=\"day\"\r\n        value={val.day}\r\n        onChange={handleChange(type, camelCase)}\r\n        input={<Input />}\r\n        children={daysInMonthArr(val.month, val.year).map((day, index) => (\r\n          <MenuItem\r\n            key={shortid.generate()}\r\n            value={day}\r\n            children={day}\r\n          />\r\n        ))}\r\n      />\r\n    </div>\r\n    <HelperText\r\n      text={helperText}\r\n    />\r\n  </div>\r\n)\r\n\r\nDateType.propTypes = {\r\n  val: PropTypes.object.isRequired\r\n}\r\n\r\nexport default DateType\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nimport { fieldTypes } from '../../globals'\r\n\r\nimport MobileNumber from './types/MobileNumber'\r\nimport BooleanType from './types/BooleanType'\r\nimport Selection from './types/Selection'\r\nimport TextType from './types/TextType'\r\nimport DateType from './types/DateType'\r\n\r\nimport './index.css'\r\n\r\nconst Field = props => {\r\n  const { type } = props\r\n  if (type === 'text' || type === 'number' || type === 'email') {\r\n    return <TextType {...props} />\r\n  } else if (type === 'date') {\r\n    return <DateType {...props} />\r\n  } else if (type === 'mobileNumber') {\r\n    return <MobileNumber {...props} />\r\n  } else if (type === 'selection') {\r\n    return <Selection {...props} />\r\n  } else if (type === 'boolean') {\r\n    return <BooleanType {...props} />\r\n  } else {\r\n    return null\r\n  }\r\n}\r\n\r\nField.propTypes = {\r\n  val: PropTypes.any.isRequired,\r\n  errors: PropTypes.array.isRequired,\r\n  handleChange: PropTypes.func.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  camelCase: PropTypes.string.isRequired,\r\n  type: PropTypes.oneOf(fieldTypes).isRequired,\r\n  required: PropTypes.bool,\r\n  helperText: PropTypes.string,\r\n  selections: PropTypes.arrayOf(PropTypes.object),\r\n  def: PropTypes.any,\r\n  placeholder: PropTypes.string,\r\n  maxLength: PropTypes.number,\r\n  validation: PropTypes.arrayOf(PropTypes.func),\r\n  booleanText: PropTypes.string,\r\n  min: PropTypes.number,\r\n  max: PropTypes.number\r\n}\r\n\r\nexport default Field\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nimport Field from './Field'\r\n\r\nconst Fields = ({state,handleChange,fields}) => (\r\n  <div className=\"Form__fields\">\r\n    {fields.map(field => (\r\n      <Field\r\n        {...field}\r\n        val={state.fields[field.camelCase]}\r\n        errors={state.fieldsErr[field.camelCase]}\r\n        handleChange={handleChange}\r\n      />\r\n    ))}\r\n  </div>\r\n)\r\n\r\nFields.propTypes = {\r\n  state: PropTypes.object.isRequired,\r\n  handleChange: PropTypes.func.isRequired,\r\n  fields: PropTypes.array.isRequired\r\n}\r\n\r\nexport default Fields\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nimport Button from '@material-ui/core/Button'\r\nimport { inRange } from 'lodash'\r\n\r\nconst determineColor = code => {\r\n  if (inRange(code, 100, 199)) { return '#333333' }\r\n  else if (inRange(code, 200, 399)) { return '#4CAF50' }\r\n  else if (inRange(code, 400, 599)) { return '#F44336' }\r\n}\r\n\r\nconst Submit = ({ handleSubmit, status }) => (\r\n  <div className=\"Form__submit\">\r\n    <Button\r\n      onClick={handleSubmit}\r\n      variant=\"contained\"\r\n      children=\"Submit\"\r\n    />\r\n    {status.code === null ? null : (\r\n      <p\r\n        style={{ color: determineColor(status.code) }}\r\n        children={`${status.code} - ${status.text}`}\r\n        className=\"Form__status\"\r\n      />\r\n    )}\r\n  </div>\r\n)\r\n\r\nSubmit.propTypes = {\r\n  handleSubmit: PropTypes.func.isRequired,\r\n  status: PropTypes.object.isRequired\r\n}\r\n\r\nexport default Submit\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nimport { toNumber } from 'lodash'\r\nimport { serializeFields, errState, checkIfErrors, reduceToErrState, newState } from './helpers'\r\n\r\nimport Fields from './Fields'\r\nimport Submit from './Submit'\r\n\r\nimport './index.css'\r\n\r\nclass Form extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = newState(this.props.fields)\r\n    this.handleChange = this.handleChange.bind(this)\r\n  }\r\n\r\n  handleChange = (type, camelCase) => event => {\r\n    const { value, name } = event.target\r\n    if (type === 'text' || type === 'number' || type === 'selection' || type === 'email') {\r\n      this.setState(prevState => ({\r\n        fields: {\r\n          ...prevState.fields,\r\n          [camelCase]: type === 'number' ? toNumber(value) : value\r\n        }\r\n      }))\r\n    }\r\n    if (type === 'date' || type === 'mobileNumber') {\r\n      this.setState(prevState => ({\r\n        fields: {\r\n          ...prevState.fields,\r\n          [camelCase]: {\r\n            ...prevState.fields[camelCase],\r\n            [name]: value\r\n          }\r\n        }\r\n      }))\r\n    }\r\n    if (type === 'boolean') {\r\n      this.setState(prevState => ({\r\n        fields: {\r\n          ...prevState.fields,\r\n          [camelCase]: !prevState.fields[camelCase]\r\n        }\r\n      }))\r\n    }\r\n  }\r\n\r\n  handleSubmit = () => {\r\n    const fieldsErr = errState(this.props.fields, this.state.fields)\r\n    if (checkIfErrors(fieldsErr)) {\r\n      this.setState({ fieldsErr: reduceToErrState(fieldsErr) })\r\n    } else {\r\n      this.props.handleSubmit(this.state.fields, res => this.handleStatus(res))\r\n      this.setState(newState(this.props.fields))\r\n    }\r\n  }\r\n\r\n  handleStatus = res => {\r\n    this.setState({ status: { code: res.status, text: res.statusText } }, () => {\r\n      setTimeout(\r\n        () => this.setState({ status: { code: null, text: '' } }),\r\n        5000\r\n      )\r\n    })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"Form\">\r\n        <Fields\r\n          state={this.state}\r\n          handleChange={this.handleChange}\r\n          fields={this.props.fields}\r\n        />\r\n        <Submit\r\n          handleSubmit={this.handleSubmit}\r\n          status={this.state.status}\r\n        />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst SerializeForm = props => (\r\n  <Form\r\n    {...props}\r\n    fields={serializeFields(props.fields)}\r\n  />\r\n)\r\n\r\nSerializeForm.propTypes = {\r\n  fields: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n  handleSubmit: PropTypes.func.isRequired\r\n}\r\n\r\nexport default SerializeForm\r\n","import React from 'react'\r\n\r\nimport axios from 'axios'\r\nimport { concat, isNull, isArray, isError } from 'lodash'\r\nimport { apiUrlPeople as url, addEmployeesFormFields } from '../globals'\r\n\r\nimport AxiosError from '../common/AxiosError'\r\nimport Form from '../common/Form'\r\n\r\nimport './index.css'\r\n\r\nclass Employees extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = { employees: null }\r\n    this.addEmployee = this.addEmployee.bind(this)\r\n  }\r\n\r\n  componentDidMount() {\r\n    axios.get(url)\r\n      .then(res => this.setState({ employees: res.data }))\r\n      .catch(err => this.setState({ employees: err }))\r\n  }\r\n\r\n  addEmployee = (data, callback) => {\r\n    axios.post(url, data)\r\n      .then(res => {\r\n        callback(res)\r\n        this.setState({ employees: concat(this.state.employees, res.data) })\r\n      })\r\n      .catch(err => console.error(err))\r\n  }\r\n\r\n  render() {\r\n    if (isError(this.state.employees)) {\r\n      // error\r\n      return (\r\n        <div className=\"Employees\">\r\n          <AxiosError err={this.state.employees} />\r\n        </div>\r\n      )\r\n    } else if (isNull(this.state.employees)) {\r\n      // loading\r\n      return (\r\n        <div className=\"Employees\">\r\n          <p>Loading...</p>\r\n        </div>\r\n      )\r\n    } else if (isArray(this.state.employees)) {\r\n      // success\r\n      return (\r\n        <div className=\"Employees\">\r\n          <h1 className=\"Employees__title\">Employees</h1>\r\n          <pre>{JSON.stringify(this.state.employees, null, 2)}</pre>\r\n          <Form\r\n            heading=\"Add Employee\"\r\n            fields={addEmployeesFormFields}\r\n            handleSubmit={this.addEmployee}\r\n          />\r\n        </div>\r\n      )\r\n    } else {\r\n      return null\r\n    }\r\n  }\r\n}\r\n\r\nexport default Employees\r\n","import React from 'react'\r\n\r\nimport Employees from './Employees'\r\n\r\nimport 'normalize.css/normalize.css'\r\nimport './index.css'\r\n\r\nconst App = props => (\r\n  <div id=\"App\">\r\n    <Employees />\r\n  </div>\r\n)\r\n\r\nexport default App\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport * as serviceWorker from './serviceWorker'\r\n\r\nimport './index.css'\r\n\r\nimport App from './App'\r\n\r\nReactDOM.render(<App />, document.getElementById('root'))\r\n\r\nserviceWorker.register()\r\n"],"sourceRoot":""}